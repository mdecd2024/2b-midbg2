var tipuesearch = {"pages":[{"title":"期中學習成果","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 期中整合 影片","tags":"41123210 w9","url":"./41123210 w9.html"},{"title":"2024/04/18 41123214","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 期中統整影片 影片","tags":"w9 41123214","url":"./w9 41123214.html"},{"title":"w9 41123224","text":"協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖 期中整合 影片","tags":"w9 41123224","url":"./w9 41123224.html"},{"title":"41123240網誌-9","text":"2024 Spring 第九週網址撰寫. 第九週網誌 期中報告影片","tags":"w9 41123240","url":"./w9-41123240.html"},{"title":"第九周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 期中整合 影片","tags":"w9","url":"./w9.html"},{"title":"文案廢稿","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 未採用的檔案 https://nfuedu-my.sharepoint.com/:w:/g/personal/41123210_nfu_edu_tw/EaJehM9sj2xGo2Uh4hjjxaQBDt6KGce-2dQKNcJeOnugWQ?e=BRLYmn","tags":"41123210","url":"./41123210.html"},{"title":"41123240網誌-8","text":"2024 Spring 第八週網址撰寫. 第八週網誌 上週清明連續假期休息沒進進度，在統整之前得進度，在分組網站的協同大部分的組別都有卡住的問題，網誌許多地方要改名，一個重複就會造成整個進度大卡住，也有遇到更新了但卻沒抓到我們檔案的問題，在這部分在這部分也是花了很多時間在解決問題。","tags":"w8 41123240","url":"./w8-41123240.html"},{"title":"41123231-網誌9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第九週","tags":"41123231W9","url":"./41123231W9.html"},{"title":"第七周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 23 123","tags":"w7","url":"./w7.html"},{"title":"41123240網誌-7","text":"2024 Spring 第七週網址撰寫. 第七週網誌 這週是第七週，在連續假期期間，因此沒有上課，各組組員各自回顧課程內容重點，把先前幾個禮拜得作業盡力趕出來。","tags":"w7 41123240","url":"./w7-41123240.html"},{"title":"41123239W6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. W6 我把我負責的影片上傳上去","tags":"W6 39","url":"./W6 39.html"},{"title":"41123239W9","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 期中整合 影片","tags":"W9 39","url":"./W9 39.html"},{"title":"第六周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 新增教學影片心得 第一部 第二部 第三部 第五部 第六部","tags":"w6","url":"./w6.html"},{"title":"w6 41123224","text":"協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 ODOO, NX, Sourcetree, Github and Replit 利用 ODOO PLM, Siemens NX, Sourcetree, Github 分組倉儲與 Replit 打造協同產品開發環境 下載 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 下載 Sourcetree_portable.7z (需要密碼) 其他工具包括 CoppeliaSim, SciTE, Portablegit, Putty, Zoomit, Python, Solvespace 以及 Process Explorer 等. 配置重點: NX, Sourcetree 與 CoppeliaSim 設定檔案與管理分組倉儲的權限, 必須存至可攜系統, 並分別從可攜系統啟動後的命令列中啟動. 下載 Solvespace_model _2d_for_cd2024_w6.7z Collaborative Development Methods, Tools and Environments for Collaborative Development local download 協同開發的方法、工具與環境 - by Alexander Filitz 瑞士蘇黎世大學資訊學系 摘要: 1. 軟體工程中的協同開發挑戰 2. 概述全球軟體開發（GSD）中常用的方法、工具和環境 3. 描述的工具主要在強化分散開發者之間的協同合作 4. 說明 GSD 中已知的工具分類方案 5. 其次, 採用一個方案並提供與該類別相關的工具概述 6. 最後，著重於支援軟體工程特定流程的工具 https://github.com/beatriz5/requirements-engineering-analysis https://www.simplilearn.com/what-is-requirement-analysis-article https://www.lambdatest.com/learning-hub/requirement-analysis https://www.guru99.com/requirements-analysis-and-transformation-techniques.html https://carpentries-incubator.github.io/python-intermediate-development-earth-sciences/14-collaboration-using-git/index.html https://www.linkedin.com/pulse/power-collaborative-development-git-esteban-bocic-bravo- https://medium.com/@syantien/understanding-git-the-core-of-collaborative-software-development-aedd65fac66 https://www.ximian.org/2023/10/version-control-with-git-best-practices-for-collaborative-software-development/","tags":"w6 41123224","url":"./w6 4112324.html"},{"title":"2024/03/28 41123214","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第六週網誌 協同產品設計實習的第六週, 說明協同 NX 零組件繪圖以及 CoppeliaSim 場景模擬相關檔案格式. Github Actions 帶有子模組的 main.yml 設定 加入取子模組內容的 main.yml 設定 1on: push: branches: [pdf] pull_request: branches: [pdf] workflow_dispatch: on: push: branches: [pdf] pull_request: branches: [pdf] workflow_dispatch: jobs: build: runs-on: ubuntu-latest steps: - uses: actions/checkout@v4.1.1 - name: Install texlive and related fonts run: | sudo apt install -y texlive texlive-xetex texlive-lang-chinese gsfonts fonts-moe-standard-kai ttf-mscorefonts-installer librsvg2-bin texlive-fonts-extra - name: Initialize submodules run: git submodule update --init --recursive - name: Test LaTeX working-directory: ./latex run: | xelatex cd_report.tex xelatex cd_report.tex xelatex cd_report.tex - name: Bump version and push tag id: tag_version uses: mathieudutour/github-tag-action@v6.1 with: github_token: ${{ secrets.GITHUB_TOKEN }} - name: Create Release id: create_release uses: comnoco/create-release-action@v2.0.5 env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: tag_name: ${{ steps.tag_version.outputs.new_tag }} release_name: Release ${{ steps.tag_version.outputs.new_tag }} draft: false prerelease: false - name: Upload Release Asset id: upload-release-asset uses: shogo82148/actions-upload-release-asset@v1.7.3 env: GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} with: upload_url: ${{ steps.create_release.outputs.upload_url }} asset_path: ./latex/cd_report.pdf asset_name: cd_report.pdf asset_content_type: pdf 其中加入取子模組內容的設定為: name: Initialize submodules run: git submodule update --init --recursive 2b-midbg4 cd_report.tex 中的範例報告第一章, 取自其組員分組網站中的 latex 目錄, 且圖片檔案也是沿用分組倉儲中的設定, 取自組員 images 目錄. ODOO PLM 論文中英並列任務 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 教學影片分組整理並自評 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 ODOO, NX, Sourcetree, Github and Replit 利用 ODOO PLM, Siemens NX, Sourcetree, Github 分組倉儲與 Replit 打造協同產品開發環境 下載 Siemens NX1872.7z (需要登入 @nfu.edu.tw, cd2024 採用電腦安裝的 NX1872 或隨身碟中的 NX1872) 下載 Sourcetree_portable.7z (需要密碼) 其他工具包括 CoppeliaSim, SciTE, Portablegit, Putty, Zoomit, Python, Solvespace 以及 Process Explorer 等. 配置重點: NX, Sourcetree 與 CoppeliaSim 設定檔案與管理分組倉儲的權限, 必須存至可攜系統, 並分別從可攜系統啟動後的命令列中啟動. 下載 Solvespace_model _2d_for_cd2024_w6.7z Replit 檢視靜態網站 從 w3 開始, 原先可以讓倉儲的動態網站與靜態網站共用 443 https 的方式, 也就是利用 SStatic 後查驗靜態網站的功能已經失效, 必須將靜態網站的檢視與動態編輯網站的啟動分開, 才能在將 Replit 網站與網誌改版的內容, 在推向 Github 倉儲之前進行查驗. 執行動態網站伺服器 cd2024 的動態網站, 主要用來編輯 config/content.htm 檔案內容, 並可透過 Convert 功能將所編輯的網頁內容, 透過 h1, h2 與 h3 標題分頁後, 會轉為 content 目錄中的頁面超文件檔案. 先前執行動態網站編輯的程式為 main.py: from cmsimde import flaskapp from gevent.pywsgi import WSGIServer flaskapp.app.run(host=\"0.0.0.0\", debug=True) Start dynamic server http_server = WSGIServer(('0.0.0.0', 8080), flaskapp.app) http_server.serve_forever() 執行 main.py 的方式, 可以依照 .replit 的設定, 直接利用 Run 按鍵執行. 也可以在 Shell 頁面中, 利用 python3 main.py 執行, 只是透過 Run 按鍵執行, 伺服器啟動之後會顯示在 Webview 頁面, 但是在 Shell 執行 python3 main.py 則必須自行以手動方式帶出伺服器連結. 執行靜態網站伺服器 如前所述, 靜態網站其實就是位於 content 目錄中的各個 html 檔案, 且圖片可引自 images 目錄, 而近端檔案連結則可引自 downloads 目錄. 當使用者將 config/content.htm 轉為 content 目錄中的靜態網站後, 若能在推向 Github 之前, 確認各頁面或網誌的內容無誤後, 再推向遠端. 而執行靜態網站伺服器的方法, 則是在 Shell 執行 python main2.py, 也就是在導入 static.py 之後啟動靜態網站. main2.py 程式內容: Run static server import static from gevent.pywsgi import WSGIServer http_server = WSGIServer(('0.0.0.0', 8080), static.app) http_server.serve_forever() 其中的 static.py 為: from flask import Flask, send_from_directory app = Flask( name ) Route to serve the index.html file @app.route('/') def index(): return send_from_directory('.', 'index.html') Route to serve static files from the ./cmsimde/static directory @app.route('/cmsimde/static/ ') def serve_static(filename): return send_from_directory('cmsimde/static', filename) Route to serve other HTML files from the root directory @app.route(' ') def serve_html(filename): return send_from_directory('.', filename) if name == ' main ': app.run(debug=True) 註: 利用 pre 標註引用資料時, 若內容帶有 < 與 > 時必須避免執行使用小於與大於符號, 而必須使用 HTML Character Codes, 以免額外產生不必要的標註符號. 當使用者希望執行靜態網頁伺服器時, 在 Shell 中執行 python3 main2.py, 經過上述設定, 在 Replit 的免費帳號環境中, 一個帳號只能啟用動態伺服器或靜態伺服器. 也就是動態伺服器或靜態伺服器在特定時刻中, 僅能擇一啟動. NXOpen hello_nxopen.py 導入 NXOpen import NXOpen def main(): # 取得目前開啟的工作階段 theSession = NXOpen.Session.GetSession() # 建立 ListingWindow listWin= theSession.ListingWindow # 開啟所建立的 ListingWindow listWin.Open() # 在 ListingWindow 中寫入字串 listWin.WriteLine(\"Hello, NXOpen\") if name == \" main \": main() CoppeliaSim 檔案格式 下載 copsim_midterm_cube2_xml.7z CoppeliaSim 目前提供二位元與 XML 場景格式 XML 場景支援儲存為單一檔案或多個模型與影像檔案 4.5.1 之後的版本, 其設定資料並非在套件目錄, 而是儲存在操作系統的 AppData/Roaming 目錄中 4.5.1 版儲存為多 XML 檔案格式時, 無法帶出場景中的 png 圖檔, 4.6.0 版之後才修正此一錯誤 目前能夠支援 IPv4 與 IPv6 網際場景模擬的版本僅修改至 4.5.1 版 XML 檔案應用廣泛, 協同產品設計過程可能需要利用程式方法處理零組件與模擬場景互相轉換取得的 XML 格式檔案 Sourcetree https://www.sourcetreeapp.com/ SourceTree_portable.7z (需要下載密碼) 其中必須要在啟動可攜程式時, 利用下列指令將 Sourcetree 先前設定存入操作系統: 1 Xcopy %Disk%:\\home_ipv6\\AppData\\Local\\Atlassian C:\\users\\%USERNAME%\\AppData\\Local\\Atlassian /E /H /C /I /Y Git branch Git 分支 Odoo PLM Odoo PLM 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 針對以上課程內容, 請利用以下留言系統進行討論:","tags":"w6 41123214","url":"./w6 41123214.html"},{"title":"41123240網誌-6","text":"2024 Spring 第六週網址撰寫. 第六週網誌 這週與上週一樣，主要是看各組的進度，看是在翻譯論文還是製作影片字幕，也有教新的，使用NX，Sourcetree 與 CoppeliaSim 設定檔案與管理分組倉儲的權限，再存至可攜系統，並分別從可攜系統啟動後的命令列中啟動，來做之後畫圖的準備。","tags":"w6 41123240","url":"./w6-41123240.html"},{"title":"41123231-網誌6","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第六周網誌 組長再用群組網誌時遇到了好多問題,主要是我們網誌標題名稱衝突到,造成上面抓不到我們的檔案,每個人改過之後花了好多時間終於解決","tags":"41123231W6","url":"./41123231 W6.html"},{"title":"第五周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 群組分工作業內容 教學影片分組整理並自評: * 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 * 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 * 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 * 需再加上自評","tags":"w5","url":"./w5.html"},{"title":"2024/03/14 41123214","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第四週網誌 LaTeX \\documentclass{article} \\usepackage[utf8]{inputenc} % 定义英文到中文的映射 \\def\\englishToChinese{ {\"hello\", \"你好\"}, {\"world\", \"世界\"}, {\"programming\", \"编程\"}, {\"language\", \"语言\"}, % 添加更多映射 } % 定义翻译函数 \\newcommand{\\translateToChinese}[1]{ \\foreach \\word/\\translation in \\englishToChinese { \\ifx\\word#1 \\translation \\break \\fi } 1 } \\begin{document} % 输入英文句子 \\def\\englishSentence{hello world, programming language.} \\textbf{English sentence:} \\englishSentence % 翻译并输出结果 \\textbf{Translated sentence:} \\translateToChinese{hello} \\translateToChinese{world}, \\translateToChinese{programming} \\translateToChinese{language}. \\end{document}","tags":"w4 41123214","url":"./w4 1123214.html"},{"title":"2024/03/21 41123214","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五週網誌 第一教學影片 第二教學影片","tags":"w5 41123214","url":"./w5 41123214.html"},{"title":"w5 41123224","text":"協同產品設計實習的第五週, 教學內容為先前影片整理、分組網誌的統整與 NX 零組件繪圖 教學影片分組整理並自評 假如你好奇這個概念哪裡來的: 請參考反思一 and 反思二. 對於事不關己或者不明白為何團隊中的成員 (這裡指教與學的相關人、事與物), 總讓人提不起興趣, 但若能在過程中找到主要在乎的角色、任務或者緣由, 或許就能從應付著手, 一直到終於了解天下沒有白吃的午餐, 所有的努力付出, 終究不會白費. 此外, 假如想參考先前學長推甄研究所的相關資訊, 請利用 Team code: n9k585c 進入自行查看. w5 2b 分組任務 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 如何統整組員子模組中的協同設計網誌 當各組員每週的協同設計網誌文章放在個別的 cd2024 倉儲的 markdown 目錄中, 只要修改分組倉儲中的 pelicalconf.py, 使用 Pelican 設定中的 PATH 與 OUTPUT_PATH 變數, 指定網誌統整目錄, 就可以在分組倉儲中納入所有組員在子模組中所編寫的協同網誌. 實際的設定操作 pelicanconf_py.txt, 是利用 pelicanconf.py 中的程式設定段, 將子模組中 markdown 目錄的 .md 動態複製到分組倉儲中的 combined_directory, 並避開分組倉儲與學員子模組倉儲中的 pages 目錄下的 .md 檔案後, 再進行網誌轉檔, 並且所產生的網誌超文件將存入所設定的 blog 目錄. 完成設定後的網誌轉檔指令為: pelican -s local_publishconf.py 表示要利用 local_publishconf.py 的設定進行轉檔, 且先前有關 pelicanconf.py 的設定也將導入執行. 過程中, 各組員必須將個別的網誌 .md 檔案名稱加上前綴字串, 例如: \"學號_\" 加上獨一無二的網誌 Slug 字串名稱, 且 Category 使用該組員的學號作為標示. 之後各組統整轉檔時, 才不至於發生相同網誌文章檔案名稱衝突的錯誤, 且從各分組網誌的 Categories 中即可找到各組員所編寫的所有網誌內容. 利用 NX1872 協同繪製零組件 從電腦輔助設計室中的電腦 C:\\Program Files\\Siemens\\NX1872 取得所需的 NX 套件目錄檔案, 之後將 NX1872 目錄存入隨身碟後, 可利用下列 start_USB_nx1872.bat 啟動. 電腦輔助設計室中 C: 安裝 NX1872, D: 則配置 NX2206 與 NX12, 若在電腦教室則可利用下列批次檔案啟動 NX, 若在各自的電腦或隨身碟帶有各版次的 NX 資料, 只需要透過網路取得授權, 就可直接從 USB 中執行各版次的 NX. 下載NX2027_lite (需要密碼, 解開後約 8G) 使用不同版本 NX 執行繪圖, 該如何協同設計? start_USB_nx1872.bat 可以啟動 USB 隨身碟中的 NX1872 Collaborative Development Methods, Tools and Environments for Collaborative Development local download 協同開發的方法、工具與環境 - by Alexander Filitz 瑞士蘇黎世大學資訊學系 摘要: 1. 軟體工程中的協同開發挑戰 2. 概述全球軟體開發（GSD）中常用的方法、工具和環境 3. 描述的工具主要在強化分散開發者之間的協同合作 4. 說明 GSD 中已知的工具分類方案 5. 其次, 採用一個方案並提供與該類別相關的工具概述 6. 最後，著重於支援軟體工程特定流程的工具 https://carpentries-incubator.github.io/python-intermediate-development-earth-sciences/14-collaboration-using-git/index.html https://www.linkedin.com/pulse/power-collaborative-development-git-esteban-bocic-bravo- https://medium.com/@syantien/understanding-git-the-core-of-collaborative-software-development-aedd65fac66 https://www.ximian.org/2023/10/version-control-with-git-best-practices-for-collaborative-software-development/ Replit 檢視靜態網站 從 w3 開始, 原先可以讓倉儲的動態網站與靜態網站共用 443 https 的方式, 也就是利用 SStatic 後查驗靜態網站的功能已經失效, 必須將靜態網站的檢視與動態編輯網站的啟動分開, 才能在將 Replit 網站與網誌改版的內容, 在推向 Github 倉儲之前進行查驗. 執行動態網站伺服器 cd2024 的動態網站, 主要用來編輯 config/content.htm 檔案內容, 並可透過 Convert 功能將所編輯的網頁內容, 透過 h1, h2 與 h3 標題分頁後, 會轉為 content 目錄中的頁面超文件檔案. 先前執行動態網站編輯的程式為 main.py: 執行 main.py 的方式, 可以依照 .replit 的設定, 直接利用 Run 按鍵執行. 也可以在 Shell 頁面中, 利用 python3 main.py 執行, 只是透過 Run 按鍵執行, 伺服器啟動之後會顯示在 Webview 頁面, 但是在 Shell 執行 python3 main.py 則必須自行以手動方式帶出伺服器連結. Start dynamic server http_server = WSGIServer(('0.0.0.0', 8080), flaskapp.app) http_server.serve_forever() 執行 main.py 的方式, 可以依照 .replit 的設定, 直接利用 Run 按鍵執行. 也可以在 Shell 頁面中, 利用 python3 main.py 執行, 只是透過 Run 按鍵執行, 伺服器啟動之後會顯示在 Webview 頁面, 但是在 Shell 執行 python3 main.py 則必須自行以手動方式帶出伺服器連結. 執行靜態網站伺服器 如前所述, 靜態網站其實就是位於 content 目錄中的各個 html 檔案, 且圖片可引自 images 目錄, 而近端檔案連結則可引自 downloads 目錄. 當使用者將 config/content.htm 轉為 content 目錄中的靜態網站後, 若能在推向 Github 之前, 確認各頁面或網誌的內容無誤後, 再推向遠端. 而執行靜態網站伺服器的方法, 則是在 Shell 執行 python main2.py, 也就是在導入 static.py 之後啟動靜態網站. 註: 利用 pre 標註引用資料時, 若內容帶有 < 與 > 時必須避免執行使用小於與大於符號, 而必須使用 HTML Character Codes, 以免額外產生不必要的標註符號. 當使用者希望執行靜態網頁伺服器時, 在 Shell 中執行 python3 main2.py, 經過上述設定, 在 Replit 的免費帳號環境中, 一個帳號只能啟用動態伺服器或靜態伺服器. 也就是動態伺服器或靜態伺服器在特定時刻中, 僅能擇一啟動. main2.py 程式內容: CoppeliaSim 檔案格式 下載 copsim_midterm_cube2_xml.7z CoppeliaSim 目前提供二位元與 XML 場景格式 XML 場景支援儲存為單一檔案或多個模型與影像檔案 4.5.1 之後的版本, 其設定資料並非在套件目錄, 而是儲存在操作系統的 AppData/Roaming 目錄中 4.5.1 版儲存為多 XML 檔案格式時, 無法帶出場景中的 png 圖檔, 4.6.0 版之後才修正此一錯誤 目前能夠支援 IPv4 與 IPv6 網際場景模擬的版本僅修改至 4.5.1 版 XML 檔案應用廣泛, 協同產品設計過程可能需要利用程式方法處理零組件與模擬場景互相轉換取得的 XML 格式檔案 Sourcetree https://www.sourcetreeapp.com/ SourceTree_portable.7z (需要下載密碼) 其中必須要在啟動可攜程式時, 利用下列指令將 Sourcetree 先前設定存入操作系統: 1 Xcopy %Disk%:\\home_ipv6\\AppData\\Local\\Atlassian C:\\users\\%USERNAME%\\AppData\\Local\\Atlassian /E /H /C /I /Y Git branch Git 分支 Odoo PLM Odoo PLM 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html","tags":"w5 41123224","url":"./w5 41123224.html"},{"title":"41123240網誌-5","text":"2024 Spring 第五週網址撰寫. 第五週網誌 這週要統整各組員的網誌進入群組倉儲，並且幫影片上字幕，大部分得同學在個人網誌的更改上都有不少問題，例如很多標題都不能相同，一個相同可能就上傳不了，會被其他東西覆蓋，在處理這些問題就花了不少時間，而且每週REPLIT都有改動，非常複雜。 影片 逐字稿 逐字稿-5 逐字稿-6 心得 這兩部影片在描述使用github建立群組倉儲的過程，並且適用可攜程式來維護我們的倉儲，這樣可以提供良好的隔離性和安全性，從而保護我們的開發環境不受外部干擾，也可以確保各個組員都可以對倉儲進行維護與更新，使分工更加明確。","tags":"w5 41123240","url":"./w5-41123240.html"},{"title":"41123231-網誌5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五周心得 教學影片分組整理並自評 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 我分到的影片是3-4的影片 影片3 影片4","tags":"41123231W5","url":"./41123231W5.html"},{"title":"2024/3/21  41123210","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第5週 w5 分組任務 第七部教學影片 https://nfuedu-my.sharepoint.com/:v:/g/personal/41123210_nfu_edu_tw/EcaWSQ-D8Y5Lg4YmJTVnbpYB1WcCn8pzvUaxi_PVN-JOow?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=OHTne6 第八部教學影片 https://nfuedu-my.sharepoint.com/:v:/g/personal/41123210_nfu_edu_tw/EVJRwEfz3ihAtuJFMqf5jKMBrZ0mpQ9FQ13I1f1ItdTukg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=miP0Mh 自行搜尋前面已經發布的教學影片, 分別 1.在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 2.從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 3.並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點","tags":"41123210 w5","url":"./w5 41123210.html"},{"title":"41123210 產品協同","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第四週翻譯","tags":"41123210 w2","url":"./w4 41123210.html"},{"title":"2024/3/28  41123210","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第6週","tags":"41123210 w6","url":"./w6 41123210.html"},{"title":"41132222 第四周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第四周網誌 翻譯老師給的論文 本人翻譯頁數71-85頁 雲端連結 分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. Github 個人與分組倉儲的維護方式 個人的倉儲名稱為 cd2024, 而期中的分組倉儲位於 mdecd2024 帳號下, 以2a 開頭, 加上 \"-\" 之後再補上 midag + 組別, 且各組員的 cd2024 個人倉儲必須設為各分組倉儲的子模組, 目的在各組員可以自行管理並維護自己的","tags":"41132222 w4","url":"./w4.html"},{"title":"41123240網誌-01","text":"2024 Spring 第一周網址撰寫. 第一周網誌 建立github倉儲與replit連結，並且增設網誌，設定github雙重認證，下載可攜套件檔案。這些內容都與上學期的大同小異，只有往制式之前沒學過得，第一周來說還算過得去跟得上進度。","tags":"w01 41123240","url":"./w01-41123240.html"},{"title":"41123235 03/14","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第四週網誌","tags":"w4 41123235","url":"./w4 41123235.html"},{"title":"w4 41123224","text":"協同產品設計實習的第四週, 各分組需要明確界定任務需求與分工時序, 隨著各組協同設計流程的進行, 分組倉儲與網站的改版越發複雜, 此時若導入 Source Tree 協助各組員更清楚看到倉儲改版架構, 另外 Git Branch 的應用. Odoo 參考文章中英並列 教學影片: 以第六組為例, 利用 Codespaces 維護倉儲內容 教學影片: 如何利用 Github Actions 編譯 LaTeX 得到分組 pdf 報告 教學影片: 如何利用 Gitpod 加上 token 取得分組倉儲權限 w4 2b 分組任務 請各組自行搜尋前面已經發布的教學影片, 分別 在影片上填上字幕, 另行上傳到可以嵌入到各分組的網站上 從影片字幕中整理出逐字稿, 放在影片下方, 以 .txt 連結安排 並在各嵌入的教學影片下方, 以摘要方式說明該影片的教學重點 Github 個人與分組倉儲的維護方式 個人的倉儲名稱為 cd2024, 而期中的分組倉儲位於 mdecd2024 帳號下, 以2a 開頭, 加上 \"-\" 之後再補上 midag + 組別, 且各組員的 cd2024 個人倉儲必須設為各分組倉儲的子模組, 目的在各組員可以自行管理並維護自己的課程倉儲, 並決定要引入分組倉儲的內容版次. 各組員與分組倉儲的資料, 包括文字資料 (含 LaTeX 報告章節資料)、零組件檔案、零件工程圖或組立圖檔 (含 BOM 與爆炸圖), 以及目前正在整理的教學影片, 或者是各學員將操作流程錄製成的影片或 Wink 資料.","tags":"w4 41123224","url":"./w4 41123224.html"},{"title":"41123231-網誌4","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第四周心得 翻譯杜林理工文章，用組長寫的程式，使用LaTeX排版生成PDF ，最後傳至群組網站上，這份文章頁數非常多所以我們這組一人翻個幾頁，很快就完成了 翻譯檔案 https://nfuedu-my.sharepoint.com/:b:/g/personal/41123231_nfu_edu_tw/EVqKkm2iJZpFpInWrUlfDyQBpz7M3ZfaBGKN-9nIl2k7fg","tags":"41123231W４","url":"./41123231W4.html"},{"title":"w3 41123224","text":"2024 Spring 協同產品設計實習的第三週, 主要說明如何善用 Github Codespaces 與 Gitpod, 以及將組員倉儲設為分組倉儲的子模組, 同時導入 LaTeX 轉 pdf 機制, 啟動期中分組報告的製作. 期中協同分組報告 請參考 https://github.com/mdecd2024/test-ag1 中的 latex 目錄與 downloads 目錄中的 https://github.com/mdecd2024/test-ag1/blob/main/downloads/report_github.txt 並根據下列教學範例: 說明如何將組員的個人倉儲納入分組倉儲成為子模組 說明如何在 Replit 維護分組倉儲 由各組員在其個人的 cd2024 倉儲中, 以 LaTeX 格式分工完成下列文章的英文與中文翻譯並列資料, 最後在分組網站的 Release 或 downloads 區完成 2b-midbgx_report.pdf 的製作. 若要在近端使用可攜程式環境編譯分組 LaTeX 報告, 請下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 以及參考資料: latex_images_github.7z (需要密碼) 2021 ANALYSIS OF THE ODOO SOFTWARE CAPABILITIES REGARDING PRODUCT LIFECYCLE MANAGEMENT, MANUFACTURING EXECUTION SYSTEMS AND THEIR INTEGRATION.pdf or local download (password required) (Odoo 軟體在產品生命週期管理、製造執行系統及其整合上的功能分析) 英文單字查詢: 2021_odoo_reading.html 將組員的個人倉儲設為分組倉儲子模組 cd2024 課程希望將各分組的組員個人網站, 以 submodule 的方式納入各分組倉儲與網站, 設定的指令為: git submodule add 組員的個人倉儲網址 組員的學號 例如: 假設組員的 cd2024 個人倉儲位於: https://github.com/scrum-1/cd2024, 且該組員的學號為 41123299, 則該組員必須在進入該組的倉儲目錄後, 執行: git submodule add https://github.com/scrum-1/cd2024.git 41123299 如此, Github 帳號為 scrum-1 的組員, 其個人倉儲就會設定為分組倉儲的子模組, 而且是以其學號命名此一子模組的目錄名稱. 這樣設定的好處是: 各組員可以自行管理個人的課程倉儲與網站, 也就是位於其 Github 帳號下的 cd2024, 並且自行決定要整合到分組倉儲與網站的版本. 也能將自己在課程網站的資料, 直接用連結導入分組網站, 無需額外將資料搬進分組倉儲. 另外一個使用 Github Classroom 派送分組倉儲的好處, 是 mdecycu 自動成為各分組倉儲的管理者之一, 若各組在改版或解決衝突的過程發生問題, mdecycu 可以協助處理. 一旦分組倉儲帶有以各組員學號作為子模組之後, git clone 倉儲必須使用: git clone --recurse-submodules 加上各組的倉儲 URL 以第一組期中分組倉儲的 git clone 為例, 並且使用 putty session 名稱 github.com: git clone --recurse-submodules git@github.com:mdecd2024/2b-midbg1.git 而且若要在分組倉儲中更新各組員的子模組版本, 則必須更換目錄到該組員的學號目錄中並且使用 git pull origin main, 才能取下該組員其 cd2024 個人倉儲的最新內容. 取下組員資料後, 若要新增提交推送, 則必須再更換目錄回分組倉儲後才能執行.","tags":"w3 41123224","url":"./w3 41123224.html"},{"title":"41132222 第三周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 利用 Github Classroom 指定分組倉儲 分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 建立新 replit 先點 Create a Repl 再點 Import from GitHub 利用 From URL 把組別倉儲連結丟進來 (利用這個 My Repositories 是找不到的) , 選取 Python 語言, 按下 Import from GitHub 成功建立, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰 (每個人都要建立一個才有權限) 送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH (git@github.com:自己的帳號/cd2024.git) , 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版權限, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案.","tags":"41132222 w3","url":"./w3.html"},{"title":"41123240網誌-3","text":"2024 Spring 第三週網址撰寫. 第三週網誌 將組員的個人倉儲加入分組倉儲成為子模組，再用replit維護群組倉儲，目前開始漸漸越來越有挑戰，要建立的東西蠻多的，稍微跟不上進度，要用多餘的時間來看影片製作。","tags":"w3 41123240","url":"./w3-41123240.html"},{"title":"41123240網誌-4","text":"2024 Spring 第四週網址撰寫. 第四週網誌 翻譯報告內容，學習如何使用replit檢視靜態網站，突如其來的改動讓我們又要多學另一種檢視方式，讓我了解到程式語言是隨時都在改動，淘汰沒跟上的人。","tags":"w4 41123240","url":"./w4-41123240.html"},{"title":"41123231-網誌3","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第三周心得 因為我們以為是只要翻譯杜林理工文章而結果是要翻譯完用中英互相排版,所以我們做的都是白工","tags":"41123231W3","url":"./41123231 W3.html"},{"title":"w2 41123224","text":"2024 Spring 協同產品設計實習的第二週, 主要利用 Github Classroom 進行分組, 並且說明如何利用 Github Codespaces 維護個人與分組網站. 利用 Github Classroom 指定分組倉儲 由於各分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH. 根據上述流程, 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版全縣, 只不過 Replit 的免費帳號環境會不定時刪除 /home/runner/.ssh 目錄中的授權資料, 因此若要使用 Replit 維護從 Github Classroom 取得授權的分組倉儲, 必須使用程式方法配置 .ssh 中的 id_rsa 與 config 檔案. 範例分組倉儲: https://github.com/mdecd2024/test-ag1 期中分組作業名稱甲班為 2a, 乙班期中分組作業名稱則為 2b, 其中甲班第一組組長必須建立名稱為 midag1 的 Team, 讓第一組的組員員加入. 其餘各組的期中報告 Team 名稱則分別為 midag2, midag3 .... 至於乙班第一組組長則必須在期中作業 2b 項下, 建立名稱為 midbg1 的 Team, 其餘乙班各組的期中報告 Team 名稱則分別為 midbg2, midbg3 .... 說明乙班第一組組長如何建立 midbg1 的過程1 說明乙班第一組組長如何建立 midbg1 的過程2 待各分組的期中報告 Team 與倉儲全部建立就緒後, 則可後續配合期末作業名稱 2a2 與 2b2, 由甲班各組組長建立 Team finalag1, finalag2 ...., 而乙班組長則建立 Team finalbg1, finalbg2 .... 等. 根據上述規劃, 乙班第一分組的期中協同倉儲將位於: https://github.com/mdecd2024/2b-midbg1, 第一組的期中報告網站將位於: https://mdecd2024.github.io/2b-midbg1. 至於乙班第一分組的期末協同倉儲將位於: https://github.com/mdecd2024/2b2-finalbg1, 且對應的期末報告網站將位於: https://mdecd2024.github.io/2b2-finalbg1.","tags":"w2 41123224","url":"./w2 41123224.html"},{"title":"第二周網誌","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 利用 Github Classroom 指定分組倉儲 分組網站從 Github Classroom 執行配置, 因此該倉儲位於 mdecd2024 帳號下, 雖然各組組員具備對此分組倉儲改版的權限, 但是若將分組倉儲 import 到 Replit, 因為其倉儲擁有者為 mdecd2024, 因此無法從 Replit accoount 項下進行授權, 建立新 replit 先點 Create a Repl 再點 Import from GitHub 利用 From URL 把組別倉儲連結丟進來 (利用這個 My Repositories 是找不到的) , 選取 Python 語言, 按下 Import from GitHub 成功建立, 但是可以利用 ssh-keygen 建立 .ssh 目錄下的 id_rsa 與 id_rsa.pub, 之後除了將公鑰 (每個人都要建立一個才有權限) 送到 Github 之外, 還需要在 .ssh 目錄中建立 config, 且將倉儲 .git/config 中的 https 協定改為 SSH (git@github.com:自己的帳號/cd2024.git) , 可以在 Replit 中以 SSH 模式取得對 Github 帳號下特定倉儲的改版權限, 只不過 Replit 的免費帳號環境會不定時刪除","tags":"w2","url":"./w2.html"},{"title":"41123240網誌-2","text":"2024 Spring 第二週網址撰寫. 第二週網誌 利用 Github Classroom 指定分組倉儲，建立ssh-key，將公鑰送到 Github ，在 .ssh 目錄中建立 config，組長將各組員加入群組倉儲。","tags":"w2 41123240","url":"./w2-41123240.html"},{"title":"41123231-網誌2","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第二周心得 將組員的個人倉儲設為分組倉儲子模組,這部分主要是組長的工作,讓架設我們的群組網站,而我們則是維護我們的網站,並將倉儲,網誌,網頁放到靜態網站首頁,其中比較麻煩的就是靜態,因為上學期沒用過,所以處理了一段時間","tags":"41123231W2","url":"./41123231 W2.html"},{"title":"w1 41123224","text":"2024 Spring 協同產品設計實習的教學主要介紹 OnShape、Coppeliasim 與 Odoo PLM 在機械設計流程中的應用 2b 建個人課程倉儲 登入 github.com, 連結到 https://github.com/mdecycu/cmsimde_site, 利用此倉儲作為 Template, 新增一個名稱為 cd2024 的倉儲, 並且將其 main 分支設為網頁根目錄. https://github.com/mdecycu/cmsimde_site 與 https://github.com/mdecycu/cmsite 的差別為, 目前的 Template 將 cmsimde 當作目錄, 而非 cmsite 中的子模組. 上述建立個人課程 cd2024 倉儲與網站的操作影片, 建立的範例網站為: https://scrum-1.github.io/cd2024/ 下載可攜套件檔案 下載可攜程式環境: portable_2024.7z (需要密碼, 下載 540MB, 解開壓縮後約 1.8GB) 下載 miktex-portable.7z (需要密碼, 下載 167MB, 解開壓縮檔案後約 1GB) 將個人倉儲 import 至 Replit 從 Replit 帳號下方的 Account, Connected Services(連線服務區) 點選 Connect 後, 讓 Github 授權 Replit, 將在 Replit 中的倉儲改版後, 有權限推回 Github. 設定 Replit 與 Github 應用授權的說明影片 在 Replit Editor(編輯器中) 使用 Ctrl + z 執行 undo 在 Replit Editor(編輯器中) 使用 Ctrl + y 執行 redo 設定 Github 帳號的雙重認證 說明如何設定 Github 雙重認證, 其中手機必須先安裝 Github Mobile, 也可以使用 Authy App 作為認證套件, 一旦在 Github 帳號下的 Setting 中的 Password and authentication 啟用雙重認證, 最後必須下載對應的 Recovery codes 並存入隨身碟, 而且要寄到個人的電子郵箱.","tags":"w1 41123224 02","url":"./w1 41123224.html"},{"title":"41123231-網誌1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第一周心得 這周的工作與上學期的工作很像,加入倉儲架設網站,所以工作很快就完成","tags":"41123231W1","url":"./41123231 W1.html"},{"title":"41132222 w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 建立個人課程倉儲 登入到自己的github, 連結到[https://github.com/mdecycu/cmsimde_site] (Teams也有貼) , 再利用 Template (連結點進去右上角) 作為倉儲, 打上 cd2024 為名稱, 進去後到設定裡的 pages 把 main 分支設為網頁根目錄靜態就跑出來了. 將倉儲 import 至 Replit 由 Replit 帳號下的設定, 底下有個 Connected Services(連線服務) 點選 Connect 後 (有連結過會出現 Disconnect ) , 讓 Github 授權給 Replit 可在 Replit 中進行改版, 改版後就有權限推回自己的網站. 建立網誌 我們所使用的網誌系統 (Pelican) , markdown 目錄是一個原始檔 (撰寫網誌範本) , 新增完的內容轉換後會位於在 blog 下的目錄. 將 markdown 網誌轉為網誌的指令為: pelican markdown -o blog -s local_publishconf.py 表示使用了 local_publishconfig.py 設定, 其餘與 blog 有關設定檔有: pelicanconf.py (更改網誌名稱) 與 publishconf.py (增加靜態連結) 等, 在設定網誌同時要依據自己的 github 帳號對上述三個.py 去做設定動作. 以上為第一周網誌 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./w1.html"},{"title":"41123235 02/18","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 41123235","url":"./w1-41123235.html"},{"title":"41123240網誌-1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 41123240","url":"./w1-41123240.html"},{"title":"41123235 03/07","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第三週","tags":"w3 41123235","url":"./w3-41123235.html"},{"title":"41123235 02/29","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第二週","tags":"w2 41123235","url":"./w2-41123235.html"},{"title":"41123235 03/21","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 第五週 第十一教學影片 https://nfuedu-my.sharepoint.com/:v:/g/personal/41123235_nfu_edu_tw/EeQsEaKf-7FHpY7Qr0YLOKoBLchxw1HyaAaruKA8A8G7Yw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=U0hhpD 第十二教學影片 https://nfuedu-my.sharepoint.com/:v:/g/personal/41123235_nfu_edu_tw/ESUSgFJZ5IhMrpTp_Ak16bcBExqWNL_cpgKsnGoM2wsmUQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=V3gDLC","tags":"w5 41123235","url":"./w5-41123235.html"},{"title":"2024 Spring 課程 41123224","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 41123224","url":"./2024-Spring-w1-blog-tutorial 41123224.html"},{"title":"41123210 w1","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"41123210 w1","url":"./w1 41123210.html"},{"title":"41123239W5","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. w5 我把影片上了字幕....","tags":"w5 39","url":"./W5 39.html"},{"title":"2024/02/18 41123214","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./w1 41123214.html"},{"title":"2b","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1","url":"./2024-Spring-w1-blog-tutorial.html"},{"title":"2024 Spring 課程 39","text":"2024 Spring 網際內容管理與協同產品設計實習課程教學導引. 內容管理系統 使用者可以自行利用 cmsimde_site 倉儲作為 Template, 建立自己的網站內容管理系統. 引用網站網址連結的方法: cmsimde_site - 在文章中多次引用同一個網站連結時, 可以使用此種方法. https://github.com/mdecycu/cmsimde_site - 假如想要快速將網址套用 html 網站連結, 可以使用此種方法. cmsimde_site - 也可以使用 Markdown 的標準網站連結使用格式. # 引用 Python 程式的方法 for i in range(10): print(i, \"列出字串\") 也可以直接在 .md 檔案中使用 html 標註, 或加入 Javascript 或 Brython 程式碼. 從 1 累加到 100: 1 add to 100 將 iterable 與 iterator 相關說明 , 利用 Brython 與 Ace Editor 整理在這個頁面. Filename: .py Run Output 清除輸出區 清除繪圖區 Reload 從 1 累加到 100 part2: 1 add to 100 cango_three_gears BSnake AI Tetris Rotating Block Filename: .py Run Output 清除輸出區 清除繪圖區 Reload","tags":"w1 39","url":"./w1 39.html"}]};